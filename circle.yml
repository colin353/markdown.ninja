machine:
  node:
    version: v6.1.0
  services:
    - redis
    - docker
  environment:
    PROJECT_NAME: dynamic-sanctum-378
    CLUSTER_NAME: portfolio
    CLOUDSDK_COMPUTE_ZONE: us-east1-d

dependencies:
  cache_directories:
    - "app/node_modules"
    - "~/kubernetes"
  override:
    # Install kubernetes if necessary.
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update kubectl
    # Create the authentication file, and use it to log into the cluster.
    - echo $KUBE_AUTH | base64 --decode -i > ${HOME}/account-auth.json
    - sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/account-auth.json
    - sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet config set container/cluster $CLUSTER_NAME
    - sudo /opt/google-cloud-sdk/bin/gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
    - sudo /opt/google-cloud-sdk/bin/gcloud --quiet container clusters get-credentials $CLUSTER_NAME
    # Install NPM requirements
    - cd app && npm install
    # Install golang dependencies
    - go get -t -d -v ./...
    - go install github.com/golang/lint/golint
    # Move to the $GOPATH directory.
    - mkdir -p ~/.go_workspace/src/github.com/colin353
    - cd ~/.go_workspace/src/github.com/colin353
    # Delete any old, cached version of the code, if it exists.
    - rm -rf ~/.go_workspace/src/github.com/colin353/portfolio || true
    # Link the codebase in the go workspace, so it can be used for compilation.
    - ln -s /home/ubuntu/portfolio /home/ubuntu/.go_workspace/src/github.com/colin353/portfolio
test:
  override:
    # Check lint, flow, etc.
    - ./etc/complain.sh
    # Build all the binaries.
    - ./etc/build.sh
    # Build the docker image.
    - docker build --rm=false -t colinmerkel/portfolio:$CIRCLE_SHA1 .
    # Start the docker image on the host.
    - ./etc/integration.sh
deployment:
  hub:
    branch: master
    commands:
      - docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS
      - docker push colinmerkel/portfolio:$CIRCLE_SHA1
